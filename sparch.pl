#! /usr/bin/perl
use v5.30;
use strict;
use warnings;
use Archive::Tar;
use MIME::Base64;
use Getopt::Long;
use Cwd;

my $run = 1;
my $keep = 0;
my $compression = "xz";
my $temp_file = "dgmHVgLHG2JssRiJ";

# Process commandline options
GetOptions(
  'no-run' => sub{ $run = 0 },
  'keep' => \$keep 
) or (show_options_error() && exit 1);

mkdir "sparch";
chdir "sparch";

# Open a temporary working file
open(my $temp_handle, '>', $temp_file) or die "Cannot open temporary file: $!";
binmode $temp_handle;

# Base64-decode the data attached to this script
my $base64_data = <DATA>;
print $temp_handle decode_base64($base64_data);
close $temp_handle;

# Decompress and extract the file archive
Archive::Tar->extract_archive($temp_file, $compression);

chdir 'bin';
my $done = do './install' if $run;
if($!) {
  die "$done: $!\n";
}

unlink $temp_file;
chdir '..';
unlink $0 unless $keep;

sub show_options_error {
  say <<EOHELP;
USAGE:
  --keep
    Keep the archive after extraction. By default the original archive is deleted after extraction.

  --no-run
    Do not run script after extraction. If the archive was created with a --script option,
    the script will be executed after extraction. --no-run prevents the script from running.
EOHELP

  return 1;
}

# Attached tar archive compressed and base64 encoded
__DATA__
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