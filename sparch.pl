#! /usr/bin/perl
use v5.30;
use strict;
use warnings;
use Archive::Tar;
use MIME::Base64;
use Getopt::Long;

my $run = 1;
my $keep = 0;
my $compression = "xz";
my $temp_file = "MQgZCAYEeCfA0HmD";

# Process commandline options
GetOptions(
  'no-run' => sub{ $run = 0 },
  'keep' => \$keep 
) or (show_options_error() && exit 1);

mkdir "sparch";
chdir "sparch";

# Open a temporary working file
open(my $temp_handle, '>', $temp_file) or die "Cannot open temporary file: $!";
binmode $temp_handle;

# Base64-decode the data attached to this script
my $base64_data = <DATA>;
print $temp_handle decode_base64($base64_data);
close $temp_handle;

# Decompress and extract the file archive
Archive::Tar->extract_archive($temp_file, $compression);

chdir 'bin';
my $done = do './install' if $run;
if($!) {
  die "$done: $!\n";
}

unlink $temp_file;
chdir '..';
unlink $0 unless $keep;

sub show_options_error {
  say <<EOHELP;
USAGE:
  --keep
    Keep the archive after extraction. By default the original archive is deleted after extraction.

  --no-run
    Do not run script after extraction. If the archive was created with a --script option,
    the script will be executed after extraction. --no-run prevents the script from running.
EOHELP

  return 1;
}

# Attached tar archive compressed and base64 encoded
__DATA__
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