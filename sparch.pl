#! /usr/bin/perl
use v5.30;
use strict; 
use warnings;
use Archive::Tar;
use MIME::Base64;
use Getopt::Long;
use Cwd;

my $run = 1;
my $keep = 0;
my $compression = "xz";
my $temp_file = "UNpn8ZsEX-LsNjjk";

# Process commandline options
GetOptions(
  'no-run' => sub{ $run = 0 },
  'keep' => \$keep 
) or (show_options_error() && exit 1);

mkdir "sparch";
chdir "sparch";

# Open a temporary working file
open(my $temp_handle, '>', $temp_file) or die "Cannot open temporary file: $!";
binmode $temp_handle;

# Base64-decode the data attached to this script
my $base64_data = <DATA>;
print $temp_handle decode_base64($base64_data);
close $temp_handle;

# Decompress and extract the file archive
Archive::Tar->extract_archive($temp_file, $compression);

my $curr_dir = getcwd(); chdir bin;
my $done = do './install' if $run;
if($!) {
  die "$done: $!\n";
}
chdir $curr_dir;

unlink $temp_file;
chdir '..';
unlink $0 unless $keep;

sub show_options_error {
  say <<EOHELP;
USAGE:
  --keep
    Keep the archive after extraction. By default the original archive is deleted after extraction.

  --no-run
    Do not run script after extraction. If the archive was created with a --script option,
    the script will be executed after extraction. --no-run prevents the script from running.
EOHELP

  return 1;
}

# Attached tar archive compressed and base64 encoded
__DATA__
H4sIAAAAAAAA/+1aa1MbRxb118yv6GBXJNVKAoGxKwiTKCA77NpAIdh1HLKq1kxLmmU0o8wDGRv/972P7p4eSdjOVrz54qnEzKMft+/j3HO7FcZZLqPowZe8tra2nu7u4t/O090OPXee7jx4IPjq7O50HnQeP+483nn85Onjpw9EZ2f7yfYDsfVFpdJXAetPQaS0iGOV3t8uSPzrj33foqv8OwrjP1vUL3E9/FZsFlm6CeJuzlUaeV6RKXGz297Z6tJtlqehn/P9QqZxGE8yfnoeRmpv7zCZ33Y976G4mIaZgP/yKXSay9SfipCdS+ZhEosxNG+L47yWCSmycDaPoJ2fhvMcushc+Mk8VNQdBnMGQalsw4SljRJfRiiz581uxaNAZXkY0zTDIEyVnyfprXgmNqqNN7rUGgUZ5skQJqRGPA989Io4Ulkm6q3gnjEb4r33TSZvxcYFCBiosSyivLrMcv57xAoSWGWc5EK9DbO8DfN+M0/DOBcbg7nyw/EtqCcIx2OVKnhZ9hsnaWWmPYFd7137/uDi6PjkAJr402Q2v0earvdBr/qzF23nuE0KsBGKHKpgaVkoGnU5TJXMFdmz7CnjQOT4dyLJKtx0kCfzObhXZZUbXRwwFx0Q1EiKhqtXzNi8T3SSPVV5kcYgS1JEAclIpq86ArjW+jE2YGZ/OksCgSjWFBvrm21Whtvo/tWB/ZkXO/+XnePj+L+90+ms4H+n8xX//y/X/4j/XlKk4sfjQQ+Q5vdFvaHfPPpn/3xwfHoCb2tb7a1OrcvjvVAQ2/ne3ssEwhva7/lJPA4nEIvDcBInqRr6EprBoywgguRolKqbBk/aA/8MbyDTXMiU37w6ftXf2/sJejx57Kai52Ec8PNZEuztXWZyoig1nTMA+AlErpcVI9E/Px8OLg8P+4OBeC+2xAexfD0Ug8L3AW1s+4veObTtrGnL7ftpCggtSVpQku13enYBGhkML0/O+4enL06O3/SPYKBtHuihuIwBQZJJHL4DFAUtAapkYpwmM9Ta6Ty3Az0/ftkfnpz2Ty6g+86yHA9JCQJEWJ9qck6VPuSCFJYFs3A2zNVsPkToApulAMzJjJ5iOVNg1uU5XigIEgR0qRsL0xgBdKQEaD+gcZMinxc5OkKNJ9IpvHwBcjpPUxXN4XGLn2YyLh/8qW1aEebILhTm9qcynijIHSQHJEsFq1Z+kWNGITrB85cZa3QrWi1+i9P8iCvJyF8Op8q/FuFYvH6DjEbeyDCSI6IvY9Rnk7LXT2+Oz7bpFd1RyyhLSOG2SxPnji1VAOFeQGOY4yQBLX4vZkqCuWso4AjSipi8C+fCMZKI1I2Kap5rOFCFupFR7fD01dk5uPDw9ZuauLtbeolC0evvaU1nMoXAqPgXTgrDzjAdR2GsPHY4bFD3UMU1NuJd8iyriWcH4kpbtclfWXd3mf3KL/RXsNldYD/Bk35Par4bP8ved5of+CurXn9HR7ib3v2gO+Kj/gKC6pdwp9+Rb9z5dh569hoYB/Mk2C4QA+rbACXlU6eBpqWB3dctDBLQII6z1RStG5WOElAZPG5zD5gVVAm6BJOjR4YcXGgWpGqoRlqI+1bbH1gQ6hgMnIx1IzJBlgdAYjWv4ZAAi7E+BJIXXCRFDzakyOzSu8UUbuvO65LymW54ae633BuveZFN9UzN1RYfkG+ZIL67e0a+UKviASmi1dKNtDZ0fAUqaLpeT90dYDAymynaotaeRzUn/JDvxkncIj6J+mWloJYJznAs+D603wkvwnGd18RagEHKZ0ErM3RXlXoi+nkCgVWZSzwabhh1Lc/UMVri/4miLmE0eozbC6m2p1WmvcdiUVNMFDhQFLm+QVWRBfM2F1ixUkGmsTZIIGZhweg2Db06BDJ4zEBGft81tjL1WawwrUkAsJHyJWZLCMk4qIlcXpN+IYeloBDyMLFQ9B5LNqiiZEqTYPv61XcLGecoO03Y4OU5fJ9TIWRcSjMSEdzN5a2DWC26xvexQevAp95D3bNeJqdmJXM1td822IRcaJTknkXQg0CZBM7FwytM0V3XXpDUtV1O5xCmKPaGdskNdgJ0w0UaYhpBWcP4uuLCSxmyzMUpxHqgIqWVod2chgTPCNHaCAq37HOZl8D8dSc+IJ0FuO7awUGtWZmywUkeJD2UMS4Yu1Za7IlH325wKGl4B4fhbIiWnIBaYpMP5ThXKXzMU+kj9Ld1ysVsWikoTQL/7juTkX8Qv//+K7QG1C3SdMhJGhzZXwRIHbgRt+3+JvZsqteSDE3uKcfGEes0Ivo2fAgAOdqb+nMNNXf1CJh6t+EMx+VdVdYV+WlklqgU1w7jcQVe1b3Y39/onz4HRa6Q5PUcWazZJPkc9uqyY35zuAAi65EiYLWMN/R0rVTJkq6WSMGG+7yhm7j8bqN8Yvc4SxMEA8MCkAQYirBEBmpx0gJRKMsCIX1vJQPyjKm4hpJxDr7SYnIWrmfTZDHUgw4pAusNdCIu67FymF2jWWzcdT22k/PCxKcUuIAkRfRaJOk1cjtcjY0evd4yeCB2HB2sD51yTA6eK4oeMDYU/ao6JInCtmsFCgsK3tqQuRQyz6U/VRRsOYJtyS2vHo2oz5AaQqY+6l30Drra7SozCB52yB3qlZ6gLD9CTrIq05EyttcZkuKZhCPjazT0qgism1nAvXIRt+JeaKeVqPKWQxmzEWiPYZn0zJFMOr26Qqf84K0ErGeA1ZneOEGt3a51y+9bOn3rUAChsDpadTGbF/b3+6c/91+edb3LQe9Ffw9et1rYlRLZP9BPnVy1iobip9uSxiCOp+EkjIElmh5gZ4b5YA2U0mwcOTTfEVcHGDn3wS8SBFeihcx0RgvEIsynEAOmatGhykzYKXEWIRCJkal/1glmpUKaCskgz9z+xD5wPwTCq+2x/nApeh+tozNmz/q7TK24xmVwVvBDdl6hYvTpwBsO0fGHQxj0uUdBK+q2CLVBu48Jb13M2hTPGc820fnORGwlOFZS8yoPwuoxSdEZo1tm6jZswljAqBJ9lBk3fa7KiwsYFbhh2xRPdnd3nrD7r00prAgT3LZbrdYgpXJ03yc/pHP6jtJVMcsykzJ+qovugS00GwHq7G5nrpIZJOBUS0Oqm4UU/cQ4Z8gDXR7D/oVVLrrDAAIxTbDedvcCsMrGfRncnYF2GK1MGzX5hhyEdYimvUkBchYxAagyZRDTURnh3hFFAB4RcN8EblPdGeynwAODldq2ktVWK59y72hvDzcy0A68HGc1E7Pv4ex6CGzN+0NLGye0NnPUQC94n4PpOaAo8/NarybaUPi8AX+vSb5/h/dbfP893rfwnyH6B1czHfzUeWKKl3KKNtOeNPsVN0HqKFKd52o0fuvqQkWHsO1FXjcc9k+OICi9Z1Pw7o446b3qe95An+HgcU2eJBExYUIizLqZisYWUeCZTmkM48daBVSlMkBNk6J5oMphDp36QL0BroJQRBy1TFsemzWMXTgESDVSDn45OT0bHA8QmfRRERdWc5lPN/Nkc5xEAXiHLVANRFn45D+tnJGw1dJOCP926N9td2TcLignP+oPDs+PaWfP1RR5/IqeWh/Xk80kOSk1LPEeEdQB1CLDEdwMzgN4paadrET7Dgw0LY2/egSXgdIcLnOp2AjU/S8cxi7HMUXT6GZMtQ6MAdiTE1IghX39xt3GorTGu2mV7TGWEoggdMloH61JEoW8qYbtvaX9tDA3CZnmwg0zEJPKapP/ZOYeTBWpkZyXAVw5GVdXwseNpoebRtEzijltDThp3biB3tv1vJYP0/PeE0Zl9aBsASClPrkHiWvFo0owfFucuhNaTTP/yizBDJwNUJqXwsjOo7cMylYhoiSeq90ooTGWPuK3qkpgja2A42nNgvR5bZzLMM5ssqxnDXKgcoSxCSoa42Vl+4vGAOKGKX2klsOcJS8/47dIZobyoH9YJbZF/0alt6ARMjMMC5EfJQs+jYakRdBCIoyUmZ0SlAwCQ9dLhuy1bLgTZQuzeSRvMbYl5ESGgVZiYQUanSD8av2thiKfe2uM0JGWifY8MhMTeldcgozLK70XSmMn/eLiXGStc4L/29uGppN2uKVdOty90b5FAQhLQsFkVgr28XWBKrJyF12IXgXcYTIYPF/yLdxZgglXWGoS+5WNIzEFOUZK2VBAU1+UUTQrwB/Qih9RBQHDCGiCzg2ILQboZcoUpUkbb8aLbcapHldXmywFML80C2KvCg2L8cqAwNMDFRJnYXHiJLXddfrQG8bELcpoMWMT/SSCQ3u9MGYvypJmmeRcaKyxOWvQCtXGUYEmNKcAqIESihdTFS+dmRhLGGVy6ST+eO3EEGtYVLA08GoRtWKN0idu1BqnwDyBQmkvD8IMl5Sx648U9ArxfBItiSvI1tdyXCkvLQNX7ZRwYEPaIrV5tlKc4bDL5dn67AI9reeT5t1V0ke7vMuM7bG0yE+XbjZP9V/3Xp297A+WHUG9lfQ7HHIvs29arg4gPgsz8gYdwjpyIA2Jawl1nxRZcn2NBHE+Fe+Ka0xDJKPlTZ/u4R3rxY+SG2VEatrdaevamNaXsGs9MplgwRgKNKZ5Hh24ESwZoXR6kdEC8X2kMwwaAxSbAtGoZeYYB31M4rORSpUphx0mzCvpRucsA6GSfcvjL2HsRwWDxFLSrZrnHrPYAmctGAGutEW5WHL0OYadhn9AtSLNKPiSMsawivEM5IUaHY2cXtWkiFwjFQO5zjzv74jCUXjN60WfhEjLSjN+XiKxNtMZyKiZ40k7gPZ74weIllplMUSLdeYZnWNg7+Q+7G+Lnj1ruRfuPxvqvWUGcZ+2PjMcPpElqv4fr8sQsCYnSYjnSWq0sySc1iyM05qgUPTV3rCE3AOl5I0mkJRudLgL8e/Xnx3DdqIqSb8vkiuuweFsR6CgvkiI88r7ttOaeo7bFT80JJ9OudbVN2u5xho6s6RRw3+UTFtodhz1T9KzO2apeJdFQ1iQinTcg+pTt0h3U8wsnEyRLvhhQP0QtCADu7pBzYLTF5npa3cNTSSi+3nrJ3AK9X5f9F4OTqFQVhzRJcKdIVUDrlqgC7uVbbNSpQJ/hq706wrsfxmHb2lPAjFcpvVOo4mbkPT37Tv6g2Uh3YzgZhvuSnl6lxc/n5573pH6Tyh6gZqMwhx8tb8f5QdU1Pj5jwF8k/pTG+rY/v4kPyiHODw9++X8+MXPF6J3ciReHh/2TwZ9z8Pfwqak1/phQ2xvbW+j/irzIF5hoReOaPMuxLNehVA8zhcAuV36VSVuiqQKSEyehqOC9uwQlTYhjEFX6M1YMSOksLno5zcqnWXI3EmlvJfQFBpH6B1kLDoo8vDgqr0D9AeYb44TppaqyPgWsiDGkGkNzk69d0mymbxlClb+Jga1AjTmr/4h29fr6/X1+np9vf7Q9V/YgxsOADQAAA==