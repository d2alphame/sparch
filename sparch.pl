#! /usr/bin/perl
use v5.30;
use strict;
use warnings;
use Archive::Tar;
use MIME::Base64;
use Getopt::Long;

my $run = 1;
my $keep = 0;
my $compression = "xz";
my $temp_file = "ryDC401lWkdCojfo";

# Process commandline options
GetOptions(
  'no-run' => sub{ $run = 0 },
  'keep' => \$keep 
) or (show_options_error() && exit 1);

mkdir "sparch";
chdir "sparch";

# Open a temporary working file
open(my $temp_handle, '>', $temp_file) or die "Cannot open temporary file: $!";
binmode $temp_handle;

# Base64-decode the data attached to this script
my $base64_data = <DATA>;
print $temp_handle decode_base64($base64_data);
close $temp_handle;

# Decompress and extract the file archive
Archive::Tar->extract_archive($temp_file, $compression);

chdir 'bin';
my $done = do './install' if $run;
if($!) {
  die "$done: $!\n";
}

unlink $temp_file;
chdir '..';
unlink $0 unless $keep;

sub show_options_error {
  say <<EOHELP;
USAGE:
  --keep
    Keep the archive after extraction. By default the original archive is deleted after extraction.

  --no-run
    Do not run script after extraction. If the archive was created with a --script option,
    the script will be executed after extraction. --no-run prevents the script from running.
EOHELP

  return 1;
}

# Attached tar archive compressed and base64 encoded
__DATA__
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